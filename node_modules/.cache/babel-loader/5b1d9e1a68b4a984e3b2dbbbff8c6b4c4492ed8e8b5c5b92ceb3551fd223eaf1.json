{"ast":null,"code":"var _jsxFileName = \"/Users/bretbarden/Development/code/phase-2/study-intake-system/src/components/ParticipantJailStatus.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParticipantJailStatus() {\n  _s();\n  const [inmateData, setInmateData] = useState(null);\n  const [inmateId, setInmateId] = useState('');\n  const handleFetchData = async () => {\n    try {\n      const response = await fetch(`https://data.cityofnewyork.us/resource/7479-ugqb.json??$$app_token=inmateid=${inmateId}`);\n      const data = await response.json();\n      setInmateData(data[0]); // Assuming the API returns an array with one matching inmate\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Inmate Data Fetcher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inmateId,\n      onChange: e => setInmateId(e.target.value),\n      placeholder: \"Enter Inmate ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchData,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), inmateData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Inmate Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(inmateData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(ParticipantJailStatus, \"fLK+qdJe1JfFkaIeD12TK8x2VhM=\");\n_c = ParticipantJailStatus;\nexport default ParticipantJailStatus;\nvar _c;\n$RefreshReg$(_c, \"ParticipantJailStatus\");","map":{"version":3,"names":["useNavigate","React","useState","jsxDEV","_jsxDEV","ParticipantJailStatus","_s","inmateData","setInmateData","inmateId","setInmateId","handleFetchData","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/bretbarden/Development/code/phase-2/study-intake-system/src/components/ParticipantJailStatus.jsx"],"sourcesContent":["import { useNavigate } from 'react-router-dom'\nimport React, { useState } from 'react';\n\nfunction ParticipantJailStatus() {\n  const [inmateData, setInmateData] = useState(null);\n  const [inmateId, setInmateId] = useState('');\n\n  const handleFetchData = async () => {\n    try {\n      const response = await fetch(`https://data.cityofnewyork.us/resource/7479-ugqb.json??$$app_token=inmateid=${inmateId}`);\n      const data = await response.json();\n      setInmateData(data[0]); // Assuming the API returns an array with one matching inmate\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Inmate Data Fetcher</h1>\n      <input\n        type=\"text\"\n        value={inmateId}\n        onChange={(e) => setInmateId(e.target.value)}\n        placeholder=\"Enter Inmate ID\"\n      />\n      <button onClick={handleFetchData}>Fetch Data</button>\n\n      {inmateData && (\n        <div>\n          <h2>Inmate Information</h2>\n          <pre>{JSON.stringify(inmateData, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\n\nexport default ParticipantJailStatus\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,qBAAqBA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+EAA8EJ,QAAS,EAAC,CAAC;MACvH,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,aAAa,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,QAAS;MAChBgB,QAAQ,EAAGC,CAAC,IAAKhB,WAAW,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC;IAAiB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFlB,OAAA;MAAQyB,OAAO,EAAElB,eAAgB;MAAAO,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEpDf,UAAU,iBACTH,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BlB,OAAA;QAAAc,QAAA,EAAMY,IAAI,CAACC,SAAS,CAACxB,UAAU,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CAjCQD,qBAAqB;AAAA2B,EAAA,GAArB3B,qBAAqB;AAoC9B,eAAeA,qBAAqB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}