{"ast":null,"code":"var _jsxFileName = \"/Users/bretbarden/Development/code/phase-2/study-intake-system/src/components/ParticipantJailStatusButton.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParticipantJailStatusButton({\n  inmateData,\n  setInmateData,\n  currentInmateId,\n  participantObj\n}) {\n  // In the fetch, use if/then logic so that it doesn't fetch if there is no inmateId\n  const handleFetchData = async () => {\n    console.log(participantObj.inmateid);\n    console.log(currentInmateId);\n    if (participantObj.inmateid.trim() === '') {\n      return;\n    }\n    try {\n      const response = await fetch(`https://data.cityofnewyork.us/resource/7479-ugqb.json?inmateid=${participantObj.inmateid}&$$app_token=521Ni3NMNKgfdeYfAhkt5Uj0M`);\n      const data = await response.json();\n      setInmateData(data[0]); // Assuming the API returns an array with one matching inmate. If it does not, will need to modify this line.\n    } catch (error) {\n      console.error('Error in fetch:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchData,\n      children: \"Check Incarceration Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), inmateData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Incarceration Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(inmateData).map(key => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [key, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this), \" \", inmateData[key]]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_c = ParticipantJailStatusButton;\nexport default ParticipantJailStatusButton;\nvar _c;\n$RefreshReg$(_c, \"ParticipantJailStatusButton\");","map":{"version":3,"names":["ParticipantJailStatusButton","inmateData","setInmateData","currentInmateId","participantObj","handleFetchData","console","log","inmateid","trim","response","fetch","data","json","error","_jsxDEV","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","key","_c","$RefreshReg$"],"sources":["/Users/bretbarden/Development/code/phase-2/study-intake-system/src/components/ParticipantJailStatusButton.jsx"],"sourcesContent":["\n\nfunction ParticipantJailStatusButton( { inmateData, setInmateData, currentInmateId, participantObj}) {\n\n    \n    // In the fetch, use if/then logic so that it doesn't fetch if there is no inmateId\n    const handleFetchData = async () => {\n        console.log(participantObj.inmateid)\n        console.log(currentInmateId)\n        if (participantObj.inmateid.trim() === '') {\n        return;\n        }\n    \n        try {\n        const response = await fetch(`https://data.cityofnewyork.us/resource/7479-ugqb.json?inmateid=${participantObj.inmateid}&$$app_token=521Ni3NMNKgfdeYfAhkt5Uj0M`);\n        const data = await response.json();\n        setInmateData(data[0]); // Assuming the API returns an array with one matching inmate. If it does not, will need to modify this line.\n        } catch (error) {\n        console.error('Error in fetch:', error);\n        }\n    };\n    \n    return (\n        <div>\n            <button onClick={handleFetchData}>Check Incarceration Status</button>\n            {inmateData && (\n                <div>\n                    <h2>Incarceration Status</h2>\n                    <ul>\n                        {Object.keys(inmateData).map((key) => (\n                            <li key={key}>\n                                <strong>{key}:</strong> {inmateData[key]}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n    \n}\n      \n\n\nexport default ParticipantJailStatusButton\n"],"mappings":";;AAEA,SAASA,2BAA2BA,CAAE;EAAEC,UAAU;EAAEC,aAAa;EAAEC,eAAe;EAAEC;AAAc,CAAC,EAAE;EAGjG;EACA,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChCC,OAAO,CAACC,GAAG,CAACH,cAAc,CAACI,QAAQ,CAAC;IACpCF,OAAO,CAACC,GAAG,CAACJ,eAAe,CAAC;IAC5B,IAAIC,cAAc,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC3C;IACA;IAEA,IAAI;MACJ,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kEAAiEP,cAAc,CAACI,QAAS,wCAAuC,CAAC;MAC/J,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCX,aAAa,CAACU,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MAChBR,OAAO,CAACQ,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC;EACJ,CAAC;EAED,oBACIC,OAAA;IAAAC,QAAA,gBACID,OAAA;MAAQE,OAAO,EAAEZ,eAAgB;MAAAW,QAAA,EAAC;IAA0B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpEpB,UAAU,iBACPc,OAAA;MAAAC,QAAA,gBACID,OAAA;QAAAC,QAAA,EAAI;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BN,OAAA;QAAAC,QAAA,EACKM,MAAM,CAACC,IAAI,CAACtB,UAAU,CAAC,CAACuB,GAAG,CAAEC,GAAG,iBAC7BV,OAAA;UAAAC,QAAA,gBACID,OAAA;YAAAC,QAAA,GAASS,GAAG,EAAC,GAAC;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACpB,UAAU,CAACwB,GAAG,CAAC;QAAA,GADnCA,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGd;AAACK,EAAA,GAtCQ1B,2BAA2B;AA0CpC,eAAeA,2BAA2B;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}