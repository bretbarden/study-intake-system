{"ast":null,"code":"export async function getParticipantsLoader() {\n  const response = await fetch('http://localhost:5000/participants');\n  const participants = await response.json();\n  return {\n    participants\n  };\n}\n\n// STEP 6 Create loader for cases\nexport async function getCasesLoader() {\n  const response = await fetch('http://localhost:5000/cases');\n  const cases = await response.json();\n  return {\n    cases\n  };\n  //Remember that the cases above is an array so it needs to be in brackets\n}\n\n// STEP 11 Add the loader and make it specific to the individual ID by params\n// You can console.log(params.id) here to see that it's working\nexport async function singleParticipantLoader({\n  params\n}) {\n  const response = await fetch(`http://localhost:5000/participants/${params.id}`);\n  const participantObj = await response.json();\n  return {\n    participantObj\n  };\n}\n\n//STEP 15 We are adding loaders again\nexport async function singleCaseLoader({\n  params\n}) {\n  const response = await fetch(`http://localhost:5000/cases/${params.id}`);\n  const caseObj = await response.json();\n  return {\n    caseObj\n  };\n}","map":{"version":3,"names":["getParticipantsLoader","response","fetch","participants","json","getCasesLoader","cases","singleParticipantLoader","params","id","participantObj","singleCaseLoader","caseObj"],"sources":["/Users/bretbarden/Development/code/phase-2/study-intake-system/src/loaders.js"],"sourcesContent":["export async function getParticipantsLoader() {\n    const response = await fetch('http://localhost:5000/participants')\n    const participants = await response.json()\n    return { participants }\n}\n\n\n// STEP 6 Create loader for cases\nexport async function getCasesLoader () {\n    const response = await fetch('http://localhost:5000/cases')\n    const cases = await response.json()\n    return { cases }\n    //Remember that the cases above is an array so it needs to be in brackets\n}\n\n\n// STEP 11 Add the loader and make it specific to the individual ID by params\n// You can console.log(params.id) here to see that it's working\nexport async function singleParticipantLoader ( {params} ) {\n    const response = await fetch(`http://localhost:5000/participants/${params.id}`)\n    const participantObj = await response.json()\n    return { participantObj }\n}\n\n\n//STEP 15 We are adding loaders again\nexport async function singleCaseLoader ( {params} ) {\n    const response = await fetch(`http://localhost:5000/cases/${params.id}`)\n    const caseObj = await response.json()\n    return { caseObj }\n}\n"],"mappings":"AAAA,OAAO,eAAeA,qBAAqBA,CAAA,EAAG;EAC1C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;EAClE,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAC1C,OAAO;IAAED;EAAa,CAAC;AAC3B;;AAGA;AACA,OAAO,eAAeE,cAAcA,CAAA,EAAI;EACpC,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;EAC3D,MAAMI,KAAK,GAAG,MAAML,QAAQ,CAACG,IAAI,CAAC,CAAC;EACnC,OAAO;IAAEE;EAAM,CAAC;EAChB;AACJ;;AAGA;AACA;AACA,OAAO,eAAeC,uBAAuBA,CAAG;EAACC;AAAM,CAAC,EAAG;EACvD,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCM,MAAM,CAACC,EAAG,EAAC,CAAC;EAC/E,MAAMC,cAAc,GAAG,MAAMT,QAAQ,CAACG,IAAI,CAAC,CAAC;EAC5C,OAAO;IAAEM;EAAe,CAAC;AAC7B;;AAGA;AACA,OAAO,eAAeC,gBAAgBA,CAAG;EAACH;AAAM,CAAC,EAAG;EAChD,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BM,MAAM,CAACC,EAAG,EAAC,CAAC;EACxE,MAAMG,OAAO,GAAG,MAAMX,QAAQ,CAACG,IAAI,CAAC,CAAC;EACrC,OAAO;IAAEQ;EAAQ,CAAC;AACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}